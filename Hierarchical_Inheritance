#include <iostream>
using namespace std;
//heirarchical inheritance
   class p1{
       public:
       p1(){
        cout<<"hii parent 1 constructor"<<endl;   
       }
       void display(){
       cout<<"hii parent 1"<<endl;
       }
   };
   class p2:public p1{
       public:
        p2(){
        cout<<"hii parent 2 constructor"<<endl;   
       }
       void d(){
       cout<<"hii parent 2"<<endl;
       }
   };
   class p3:public p1{
       public:
        p3(){
        cout<<"hii parent 3 constructor"<<endl;   
       }
       void di(){
       cout<<"hii parent 3"<<endl;
       }
   };
   class c1:public p2{
       public:
        c1(){
        cout<<"hii child 1 constructor"<<endl;   
       }
       void dis(){
       cout<<"hii child 1 "<<endl;
       }
   };
   
   class c2:public p2{
       public:
       c2(){
        cout<<"hii child 2 constructor"<<endl;   
       }
       void disp(){
       cout<<"hii child 2"<< endl;
       }
   };
   class c3:public p3{
       public:
       c3(){
        cout<<"hii child 3 constructor"<<endl;   
       }
       void displ(){
       cout<<"hii child 3 "<<endl;
       }
   };
   class c4:public p3{
       public:
       c4(){
        cout<<"hii child 4 constructor"<<endl;   
       }
       void displa(){
       cout<<"hii child 4 "<<endl;
       }
   };

int main() {
  p1 p;
  p2 pe;
  p3 po;
  p.display();
  pe.d();
  po.di();
  c1 ch1;
    ch1.dis();
    ch1.d();      // From p2
    ch1.display(); // From p1

    c2 ch2;
    ch2.disp();
    ch2.d();
    ch2.display();

    c3 ch3;
    ch3.displ();
    ch3.di();
    ch3.display();

    c4 ch4;
    ch4.displa();
    ch4.di();
    ch4.display();
    return 0;
}
